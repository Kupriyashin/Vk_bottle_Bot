import asyncio
import math
import os
import random
import config
from vkbottle import GroupEventType, GroupTypes
from vkbottle import API
from loguru import logger
from vkbottle.bot import Bot, Message
from vkbottle import Keyboard, KeyboardButtonColor, Text, VKPay

logger.add('debug.log', format="{time},{level},{message}", level='INFO')

bot = Bot(token=config.token_group)
user = API(token=config.token_user)


@logger.catch()
async def random_moew_sentence() -> str:
    try:

        _words = ['–º—è—É'] * random.randint(3, 10)
        logger.info(_words)

        _words[-1] = _words[-1] + str(random.choice(['.', '!', '?', '...']))

        for _ in range(0, len(_words) - 1):

            if random.random() < 0.01:
                _words[_] = _words[_] + str(random.choice(['üò∫', 'üò∏', 'üòπ', 'üòª', 'üòº', 'üòΩ', 'üôÄ', 'üòø', 'üòæ']))

            if random.random() < 0.1:
                _words[_] = _words[_] + str(random.choice([',', ':', ' -', '']))

        _sentence = ' '.join(_words)
        _sentence = _sentence.capitalize()
        logger.info(f'–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ random_moew_sentence: {_sentence}')

        return str(_sentence)

    except Exception as process_file_err:
        logger.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ meow: {process_file_err}')


@logger.catch()
async def sentence() -> str:
    try:
        _outsectence = []
        if random.random() > 0.5:
            _outsectence.append(await random_moew_sentence())
        elif random.random() < 0.01:
            for a in range(6):
                _outsectence.append(await random_moew_sentence() + ' ')
        elif random.random() < 0.1:
            for b in range(5):
                _outsectence.append(await random_moew_sentence() + ' ')
        elif random.random() < 0.2:
            for c in range(4):
                _outsectence.append(await random_moew_sentence() + ' ')
        elif random.random() < 0.3:
            for d in range(3):
                _outsectence.append(await random_moew_sentence() + ' ')
        elif random.random() < 0.4:
            for f in range(2):
                _outsectence.append(await random_moew_sentence() + ' ')
        elif random.random() < 0.5:
            for g in range(1):
                _outsectence.append(await random_moew_sentence() + ' ')

        _output = ''.join(_outsectence)
        logger.info(f'–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ sentence: {_output}')
        await asyncio.sleep(0.2)

        return _output

    except Exception as err_sentence:
        logger.error(err_sentence)
        return '–ú—è—É –º—è—É –º—è—É –º—è—É, –º—è—É –º—è—É –º—è—É –º—è—É –º—è—É?'


@logger.catch()
async def ran_art() -> dict:
    try:
        from icrawler.builtin import BingImageCrawler
        import random

        _bing_crawler = BingImageCrawler(
            downloader_threads=4,
            storage={'root_dir': 'Image'}
        )

        _names_cat = (random.choice(open("../popular cat breeds.txt").readlines())).split('\n')[0]
        _fraza_poisk = str(f"{_names_cat} cats photography").replace(' ', '%20')

        _filters = {
            'type': 'photo',
            'color': random.choice(
                ['color', 'white',
                 'gray', 'brown']),
            'size': '>1920x1080',
            'layout': 'wide'
        }

        _bing_crawler.crawl(keyword=_fraza_poisk,
                            filters=_filters,
                            offset=random.randint(0, 3),
                            min_size=(1920, 1080),
                            max_num=50)

        _urls_image = {}
        with open('file_url.txt', 'r', encoding='UTF-8') as urls:
            for line in urls:
                (key, val) = str(line).split('->')
                _urls_image[int(key)] = str(val)[:-1]

        os.remove('file_url.txt')
        _urls_image = random.choice(list(_urls_image.items()))

        _files = os.listdir('../Image')

        for file in _files:
            if str(_urls_image[0]) not in file:
                os.remove(f"Image/{file}")

        logger.info(f"–°—Å—ã–ª–∫–∞ –Ω–∞ –≤—ã—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {_urls_image[-1]}\n–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: {os.listdir('../Image')[0]}")

        return {'url_image': f"{_urls_image[-1]}", 'name_image': f"{os.listdir('../Image')[0]}"}

    except Exception as err_poluchenie_photo:
        logger.error(f"–ü—Ä–∏ –ø–æ–∏—Å–∫–µ —Ñ–æ—Ç–æ –ø–æ–ª—É—á–∏–ª –æ—à–∏–±–∫—É: {err_poluchenie_photo}")
        return {'url_image': f"https://vk.com/kupriyashinnick", 'name_image': f"Image_error/Error_Image.jpg"}


@logger.catch()
@bot.on.raw_event(GroupEventType.WALL_REPLY_NEW, dataclass=GroupTypes.WallReplyNew)
async def comments_new_wall(event: GroupTypes.WallReplyNew):
    try:
        logger.info(f'–ü—Ä–∏—à–µ–ª –∏–≤–µ–Ω—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {event.object}')
        if event.object.from_id > 0:

            responce = '–û—Ç–≤–µ—Ç–∞ –Ω–µ—Ç'

            _owner_id = event.object.owner_id
            _post_id = event.object.post_id
            _from_group = True
            _reply_to_comment = event.object.id

            _user_info = await bot.api.users.get(user_ids=[event.object.from_id])
            _user_info = _user_info[0].first_name if _user_info else ''

            _message = await sentence()
            _message = f"@id{event.object.from_id}({_user_info}), {_message}"
            logger.info(f"–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∏–º–µ–Ω–∏ —é–∑–µ—Ä–∞ –∏ –æ—Ç–≤–µ—Ç: {_message}")

            _vibor_otpravri = random.random()
            logger.info(f"–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è: {_vibor_otpravri}")

            if _vibor_otpravri > 0.5:
                logger.info(f'–°–º—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {_message}')

                responce = await bot.api.wall.create_comment(owner_id=_owner_id, post_id=_post_id,
                                                             from_group=_from_group,
                                                             reply_to_comment=_reply_to_comment, message=_message)
            elif _vibor_otpravri < 0.3:
                _fotos = await user.photos.get(
                    owner_id=-219553631,
                    album_id='wall',
                    count=200
                )
                logger.info('–ü–æ–ª—É—á–∏–ª —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ä–∞–∑–º–µ—Ä–µ 200 —à—Ç—É–∫')

                _arr_id_fotos = []
                for item in _fotos.items:
                    _arr_id_fotos.append(item.id)
                    logger.info('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π')

                responce = await bot.api.wall.create_comment(owner_id=_owner_id, post_id=_post_id,
                                                             from_group=_from_group,
                                                             reply_to_comment=_reply_to_comment, message=_message,
                                                             attachments=[
                                                                 f"photo{_fotos.items[0].owner_id}_{random.choice(_arr_id_fotos)}"])
                logger.info(f"–û—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π")

            elif _vibor_otpravri < 0.5:
                _stiker_id = ''

                with open('stikers_id.txt', 'r', encoding='UTF-8') as file_ids:
                    _stiker_id = random.choice(file_ids.readlines())
                    logger.info(f'–ü–æ–ª—É—á–∞—é —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∞–π–¥–∏ —Å—Ç–∏–∫–µ—Ä–∞: {_stiker_id}')
                logger.info(f"–ü–æ–ª—É—á–µ–Ω–Ω—ã–π –∞–¥–∏ —Å—Ç–∏–∫–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {_stiker_id}")

                responce = await bot.api.wall.create_comment(owner_id=_owner_id, post_id=_post_id,
                                                             from_group=_from_group,
                                                             reply_to_comment=_reply_to_comment,
                                                             sticker_id=int(_stiker_id))

            logger.info(f'–ü—Ä–∏—à–µ–ª –æ—Ç–≤–µ—Ç –æ—Ç –º–µ—Ç–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {responce}')

    except Exception as comment_error:
        logger.error(comment_error)


# @logger.catch()
# @bot.on.private_message(StickerRule())
# async def privet_ls_stikers(message: Message):
#     try:
#         _stiker_id = ''
#
#         with open('stikers_id.txt', 'r', encoding='UTF-8') as file_ids:
#             _stiker_id = random.choice(file_ids.readlines())
#             logger.info(f'–ü–æ–ª—É—á–∞—é —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∞–π–¥–∏ —Å—Ç–∏–∫–µ—Ä–∞: {_stiker_id}')
#
#         await message.answer(sticker_id=int(_stiker_id))
#         logger.info(f'–û—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö —Å—Ç–∏–∫–µ—Ä–æ–º')
#     except Exception as error_stikers:
#         logger.error(error_stikers)

@logger.catch()
@bot.on.private_message(text='–î–∞–π –∫–æ—Ç–∏–∫–∞')
async def kotik_v_ls(message: Message):
    try:
        _keybord = Keyboard(inline=True)
        _keybord.add(Text('–î–∞–π –∫–æ—Ç–∏–∫–∞'), color=KeyboardButtonColor.POSITIVE)

        _keybord_vkpay = Keyboard(inline=True)
        _keybord_vkpay.add(Text('–î–∞–π –∫–æ—Ç–∏–∫–∞'), color=KeyboardButtonColor.POSITIVE)
        _keybord_vkpay.row()
        _keybord_vkpay.add(Text('–î–æ–Ω–∞—Ç–∏–∫ –Ω–∏–∂–µüëá'), color=KeyboardButtonColor.NEGATIVE)
        _keybord_vkpay.row()
        _keybord_vkpay.add(VKPay(hash=f"action=transfer-to-group&group_id={219553631}&aid=10"))

        logger.info('–°–æ–∑–¥–∞–ª –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∫–æ—Ç–∞')

        _fotos = await user.photos.get(
            owner_id=-219553631,
            album_id='wall',
            count=200
        )
        logger.info('–ü–æ–ª—É—á–∏–ª —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ä–∞–∑–º–µ—Ä–µ 200 —à—Ç—É–∫')

        _arr_id_fotos = []
        for item in _fotos.items:
            _arr_id_fotos.append(item.id)
            logger.info('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π')

        responce = await message.answer(attachment=[
            f"photo{_fotos.items[0].owner_id}_{random.choice(_arr_id_fotos)}"],
            keyboard=_keybord_vkpay if random.random() < 0.1 else _keybord)

        logger.info(f"–û—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π, –µ–≥–æ –ª–æ–≥: {responce}")

    except Exception as error_kotik_ls:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ—Ç–∏–∫–∞ –≤ –ª—Å: {error_kotik_ls}")


@logger.catch()
@bot.on.private_message(text=['–Ω–∞—á–∞—Ç—å', '–ü—Ä–∏–≤–µ—Ç', '–ø—Ä–∏–≤–µ—Ç', '–ù–∞—á–∞—Ç—å', '–∫–∞–∫ –¥–µ–ª–∞?', '–ö–∞–∫ –¥–µ–ª–∞?', '–ö–∞–∫ –¥–µ–ª–∞', '–∫–∞–∫ –¥–µ–ª–∞'])
async def otvet_privet(message: Message):
    try:
        _keybord = Keyboard(inline=True)
        _keybord.add(Text('–î–∞–π –∫–æ—Ç–∏–∫–∞'), color=KeyboardButtonColor.POSITIVE)
        _keybord.row()
        _keybord.add(VKPay(hash=f"action=transfer-to-group&group_id={219553631}&aid=10"))

        await message.answer("–ü—Ä–∏–≤–µ—Ç –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥!\n"
                             "–Ø –±–æ—Ç –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã, –æ—Ç–≤–µ—á–∞—é –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤, –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –º–æ–≥—É –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Öü¶π‚Äç‚ôÄÔ∏è\n"
                             "\n"
                             "–ú–æ–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
                             "0‚É£ –Ø –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–µ–¥—É –¥–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É, –Ω–∞—á–∏–Ω–∞—è –æ—Ç –ø–æ–∏—Å–∫–∞ –∫–∞—Ä—Ç–∏–Ω–æ–∫, –∑–∞–∫–∞–Ω—á–∏–≤–∞—è —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–æ—Å—Ç–æ–≤\n"
                             "1‚É£ –ú–æ–≥—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∂–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∏ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö\n"
                             "2‚É£ –°–∫–∏–¥—ã–≤–∞—é —Ä–∞–Ω–¥–æ–º–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É, –µ—Å–ª–∏ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å - –î–∞–π –∫–æ—Ç–∏–∫–∞üëá\n"
                             "\n"
                             "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –º–æ–∂–µ—à—å –º–µ–Ω—è –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –¥–µ–Ω—é–∂–∫–æ–πüí≥", keyboard=_keybord)
    except Exception as ot_pr:
        logger.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ otvet_privet: {ot_pr}')


# @logger.catch()
# @bot.on.private_message(AttachmentTypeRule(
#     attachment_types=["photo", "audio", "video", "doc", "link", "market", "market_album", "gift", "wall",
#                       "wall_reply", "article", "poll", "call", "graffiti", "audio_message", "story",
#                       "group_call_in_progress",
#                       "mini_app"]))  # –ï—Å–ª–∏ –∫–∏–¥–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –∫–∞–∫–æ–π-—Ç–æ –∞—Ç—Ç–∞—á–º–Ω–µ—Ç (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, —Ñ–∞–π–ª –∏ —Ç.–¥.)
# @bot.on.private_message(text='–î–∞–π –∫–æ—Ç–∏–∫–∞')  # –ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –î–∞–π –∫–æ—Ç–∏–∫–∞
# async def give_me_kotic(message: Message):
#     try:
#         _keybord = Keyboard(inline=True)
#         _keybord.add(Text('–î–∞–π –∫–æ—Ç–∏–∫–∞'), color=KeyboardButtonColor.POSITIVE)
#
#         _keybord_vkpay = Keyboard(inline=True)
#         _keybord_vkpay.add(Text('–î–∞–π –∫–æ—Ç–∏–∫–∞'), color=KeyboardButtonColor.POSITIVE)
#         _keybord_vkpay.row()
#         _keybord_vkpay.add(Text('–î–æ–Ω–∞—Ç–∏–∫ –Ω–∏–∂–µüëá'), color=KeyboardButtonColor.NEGATIVE)
#         _keybord_vkpay.row()
#         _keybord_vkpay.add(VKPay(hash=f"action=transfer-to-group&group_id={219553631}&aid=10"))
#
#         logger.info('–°–æ–∑–¥–∞–ª –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∫–æ—Ç–∞')
#
#         _fotos = await user.photos.get(
#             owner_id=-219553631,
#             album_id='wall',
#             count=200
#         )
#         logger.info('–ü–æ–ª—É—á–∏–ª —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ä–∞–∑–º–µ—Ä–µ 50 —à—Ç—É–∫')
#
#         _arr_id_fotos = []
#         for item in _fotos.items:
#             _arr_id_fotos.append(item.id)
#             logger.info('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π')
#
#         import random
#         await message.answer('–î–µ—Ä–∂–∏ –∫–æ—Ç–∏–∫–∞üò∫', keyboard=_keybord_vkpay if random.random() < 0.1 else _keybord,
#                              attachment=f"photo{_fotos.items[0].owner_id}_{random.choice(_arr_id_fotos)}")
#         logger.info('–û—Ç–ø—Ä–∞–≤–∏–ª —Ä–∞–Ω–¥–æ–º–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é')
#         del _fotos
#
#     except Exception as give_cat:
#         logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ give_me_kotic: {give_cat}")


@logger.catch()
@bot.on.private_message(text='–î–æ–Ω–∞—Ç–∏–∫ –Ω–∏–∂–µüëá')
async def donatic(message: Message):
    try:
        _keybord = Keyboard(inline=True)
        _keybord.add(Text('–î–∞–π –∫–æ—Ç–∏–∫–∞'), color=KeyboardButtonColor.POSITIVE)

        _keybord = Keyboard(inline=True)
        _keybord.add(Text('–î–∞–π –∫–æ—Ç–∏–∫–∞'), color=KeyboardButtonColor.POSITIVE)
        _keybord.row()
        _keybord.add(Text('–î–æ–Ω–∞—Ç–∏–∫ –Ω–∏–∂–µüëá'), color=KeyboardButtonColor.NEGATIVE)
        _keybord.row()
        _keybord.add(VKPay(hash=f"action=transfer-to-group&group_id={219553631}&aid=10"))

        await message.answer('–Ø —Å—á–∏—Ç–∞—é —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Äüòº', keyboard=_keybord,
                             attachment=f"photo-219553631_457239167")
        logger.info('–æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–∫—É –¥–ª—è –¥–æ–Ω–∞—Ç–∞')
    except Exception as donat_err:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–î–æ–Ω–∞—Ç–∏–∫ –Ω–∏–∂–µüëá': {donat_err} ")


@logger.catch()
@bot.loop_wrapper.interval(hours=4)
async def post():
    try:
        from vkbottle import PhotoWallUploader
        _image_uploader = PhotoWallUploader(user)

        _image = await ran_art()
        logger.info(f"–ü–æ–ª—É—á–∏–ª _image –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {_image}")

        # random.choice(['292373196', '292373202', '292373213', '292373219', '292373225'])
        _attachment = await _image_uploader.upload(file_source=f"Image/{_image['name_image']}")
        logger.info(f"–ü–æ–ª—É—á–∏–ª _attachment –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {_attachment}")

        _message = await sentence()

        await user.wall.post(owner_id=-219553631, from_group=True, attachments=_attachment,
                             copyright=_image['url_image'], message=_message)
        logger.info('–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ—Å—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥—Ä—É–ø–ø—ã')

        _files = os.listdir('../Image')
        for file in _files:
            os.remove(f"Image/{file}")
            logger.info(f"–û—á–∏—â–∞—é –ø–∞–ø–∫—É —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏")

        _files = os.listdir(os.path.abspath(os.curdir))
        logger.info(_files)

        for file in _files:
            if 'file_url' in file:
                os.remove('file_url.txt')
                logger.info('–£–¥–∞–ª—è—é —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö')

    except Exception as upload_err:
        logger.error(f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å—Ç–µ–Ω–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞: {upload_err}")


@logger.catch()
@bot.loop_wrapper.interval(days=1)
async def happy_birthday():
    try:
        from datetime import datetime
        _friends_happy_birthday = []
        _friends_count = await user.friends.get()
        _friends_count = _friends_count.count

        _friends_count_items = []
        for _ in range(math.ceil(int(_friends_count) / 100)):

            _item = await user.friends.get(order='name', offset=_ * 100, count=100, fields=['bdate'])
            logger.info(f'–ü–æ–ª—É—á–∏–ª 100 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –¥—Ä—É–∑–µ–π: {_item.items}\n')

            for _1 in _item.items:
                _friends_count_items.append(_1)
                logger.info(f"–î–æ–±–∞–≤–ª—è—é –≤ _friends_count_items —ç–ª–µ–º–µ–Ω—Ç: {_1}")

        for _user in _friends_count_items:
            logger.info(
                f"\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {_user.first_name} {_user.last_name} https://vk.com/id{_user.id},\n"
                f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {_user.bdate}, —Ç–∏–ø –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è {type(_user.bdate)}\n")
            try:
                if (int(_user.bdate.split('.')[0]) == datetime.now().day) and (
                        int(_user.bdate.split('.')[1]) == datetime.now().month):
                    _friends_happy_birthday.append(_user)
                    logger.info(
                        f"–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {_user.first_name} {_user.last_name} https://vk.com/id{_user.id}")
            except Exception as bdate_error:
                logger.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è: {bdate_error}")

        for _ in _friends_happy_birthday:
            logger.info(
                f"–°–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω—É–µ—Ç —Å–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {_.first_name} {_.last_name} https://vk.com/id{_.id}")

            await user.messages.send(user_ids=[int(_.id)], random_id=random.randint(-2147483648, 2147483647),
                                     message=f"–î–æ–±—Ä–µ–π—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! üåç\n"
                                             f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –∂–µ–ª–∞—é –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ!")

    except Exception as happy_error:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è: {happy_error}")


@logger.catch()
@bot.on.private_message()
async def otvet_v_ls(message: Message):
    try:
        responce = '–û—Ç–≤–µ—Ç–∞ –Ω–µ—Ç'
        _message = await sentence()

        _vibor_otpravri = random.random()
        logger.info(f"–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è: {_vibor_otpravri}")

        if (_vibor_otpravri < 1) and (_vibor_otpravri > 0.4):
            logger.info(f'–°–º—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –≤ –ª—Å: {_message}')

            responce = await message.answer(_message)

        elif _vibor_otpravri < 0.1:

            _keybord = Keyboard(inline=True)
            _keybord.add(Text('–î–∞–π –∫–æ—Ç–∏–∫–∞'), color=KeyboardButtonColor.POSITIVE)

            _keybord_vkpay = Keyboard(inline=True)
            _keybord_vkpay.add(Text('–î–∞–π –∫–æ—Ç–∏–∫–∞'), color=KeyboardButtonColor.POSITIVE)
            _keybord_vkpay.row()
            _keybord_vkpay.add(Text('–î–æ–Ω–∞—Ç–∏–∫ –Ω–∏–∂–µüëá'), color=KeyboardButtonColor.NEGATIVE)
            _keybord_vkpay.row()
            _keybord_vkpay.add(VKPay(hash=f"action=transfer-to-group&group_id={219553631}&aid=10"))

            logger.info('–°–æ–∑–¥–∞–ª –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∫–æ—Ç–∞')

            _fotos = await user.photos.get(
                owner_id=-219553631,
                album_id='wall',
                count=200
            )
            logger.info('–ü–æ–ª—É—á–∏–ª —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ä–∞–∑–º–µ—Ä–µ 200 —à—Ç—É–∫')

            _arr_id_fotos = []
            for item in _fotos.items:
                _arr_id_fotos.append(item.id)
                logger.info('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π')

            responce = await message.answer(message=_message, attachment=[
                f"photo{_fotos.items[0].owner_id}_{random.choice(_arr_id_fotos)}"],
                                            keyboard=_keybord_vkpay if random.random() < 0.1 else _keybord)

            logger.info(f"–û—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π")

        elif (_vibor_otpravri > 0.1) and (_vibor_otpravri < 0.4):
            _stiker_id = ''

            with open('stikers_id.txt', 'r', encoding='UTF-8') as file_ids:
                _stiker_id = random.choice(file_ids.readlines())
                logger.info(f'–ü–æ–ª—É—á–∞—é —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∞–π–¥–∏ —Å—Ç–∏–∫–µ—Ä–∞: {_stiker_id}')
            logger.info(f"–ü–æ–ª—É—á–µ–Ω–Ω—ã–π –∞–¥–∏ —Å—Ç–∏–∫–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {_stiker_id}")

            responce = await message.answer(sticker_id=int(_stiker_id))

        logger.info(f'–ü—Ä–∏—à–µ–ª –æ—Ç–≤–µ—Ç –æ—Ç –º–µ—Ç–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {responce}')

    except Exception as otvet_ls_err:
        await message.answer(
            message='–ú—è—É –º—è—É –º—è—É –º—è—É –º—è—É - –º—è—É –º—è—É –º—è—É –º—è—É –º—è—É? –ú—è—É –º—è—É –º—è—É –º—è—É –º—è—É –º—è—É? –ú—è—É –º—è—É –º—è—É –º—è—É –º—è—É –º—è—É!')
        logger.error(f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –≤ –ª—Å –≥—Ä—É–ø–ø—ã: {otvet_ls_err}")
        logger.catch()


if __name__ == '__main__':
    bot.run_forever()
